n = int(input())
dp = [[0] * 10 for _ in range(n+1)]

for i in range(1, 10):
    dp[1][i] = 1



# 2차원 배열로 한다는게 포인트
# dp의 row 행은 자릿수를 의미, column행은 0,1,2...가 맨뒤에 들어갈 수 있는 수의 개수
for i in range(2, n+1):
    for j in range(10):
        if j == 0:                      # j == 0 이라는 뜻은 0이 맨뒤에 들어갈 수 있는 수의 개수인데 그럼 앞이 1인 경우만 가능 하므로 [i-1][j+1] 즉 [1] 만 가능
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:                    # j == 9 이라는 뜻은 9가 맨뒤에 들어갈 수 있는 수의 개수인데 그럼 앞이 8인 경우만 가능 하므로 [i-1][j-1] 즉 [8] 만 가능
            dp[i][j] = dp[i-1][j-1]
        else:                           # 1 <= j <= 8 인 경우는  ex)  j가 3이면 앞이 2, 뒤가 4가 가능하므로 i-1자리의 [j-1], [j+1]을 더해준 값이 되는것임
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]


print(sum(dp[n]) % 1000000000)
